" Vundle setup
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" Vundle bundle definitions - github repos
Bundle 'gmarik/vundle'
Bundle 'altercation/vim-colors-solarized.git'
Bundle 'tpope/vim-git.git'
Bundle 'tpope/vim-haml.git'
Bundle 'tpope/vim-repeat.git'
Bundle 'tpope/vim-abolish.git'
Bundle 'scrooloose/nerdtree.git'
Bundle 'kien/ctrlp.vim.git'
Bundle 'sjl/gundo.vim.git'
Bundle 'tpope/vim-fugitive.git'
Bundle 'kana/vim-textobj-user.git'
Bundle 'kana/vim-textobj-entire.git'
Bundle 'tpope/vim-surround.git'
Bundle 'scrooloose/nerdcommenter'
Bundle 'godlygeek/tabular'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'mv/mv-vim-puppet'
Bundle 'junegunn/vim-easy-align'
Bundle 'scrooloose/syntastic'
Bundle 'jpalardy/vim-slime'
Bundle 'tpope/vim-obsession'
Bundle 'tpope/vim-endwise'
Bundle 'vim-ruby/vim-ruby'
Bundle 'mhinz/vim-startify'
Bundle 'tpope/vim-tbone'
Bundle 'ntpeters/vim-better-whitespace'
Bundle 'duskhacker/sweet-rspec-vim'
Bundle 'valloric/youcompleteme'

" Vundle bundle definitions - vim-scripts repos
"Bundle 'Example'

" Vundle bundle definitions - non-github repos
"Bundle 'git://git.example.com/example.git'

" Enable filetype plugins
filetype plugin on

" Configure indenting
filetype indent on  " Required for Vundle (in addition to just being a good setting)
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" Configure history
set history=200

" Configure folding
set foldlevelstart=99 " Expand all folds by default
set foldmethod=syntax

" Enable the mouse
set mouse=a

" Link the system clipboard to the unnamed register
set clipboard=unnamed

" Activate solarized color scheme
syntax enable
set background=dark
colorscheme solarized

" Configure line numbering
set number
set norelativenumber
"set relativenumber
":au FocusLost * :set number
":au FocusGained * :set relativenumber
"autocmd InsertEnter * :set number
"autocmd InsertLeave * :set relativenumber

"function! NumberingMethodToggle()   " Adapted from numbers.vim
	"if (&number)
		"set relativenumber
	"else
		"set number
	"endif
"endfunc

"nnoremap <silent> <Leader>n :call NumberingMethodToggle()<CR>
"vnoremap <silent> <Leader>n :<C-u>call NumberingMethodToggle()<CR>gv

"nnoremap <silent> <Leader>N :set nonumber \| set norelativenumber<CR>
"vnoremap <silent> <Leader>N :<C-u>set nonumber \| set norelativenumber<CR>gv

" Configure maximum line length highlighting
if exists("&colorcolumn")
  set colorcolumn=100
endif

" Configure number incrementation
set nrformats=hex

" Enable and configure the wildmenu
set wildmenu
set wildmode=list:longest,full

" Configure search
set incsearch
set hlsearch
set ignorecase
set smartcase
nnoremap <Leader>h :<C-u>nohlsearch<CR>
vnoremap <Leader>h :<C-u>nohlsearch<CR>gv

" Configure encryption
if exists("&blowfish")
  set cm=blowfish
endif

" Configure the backspace key
set backspace=indent,eol,start

""""" BEGIN PLUGIN CONFIGURATION """""
" Configure Omnicomplete
let g:ftplugin_sql_omni_key = '<C-f>'

" Configure NerdTree
nnoremap <silent> <Leader>o :NERDTreeToggle<CR>
vnoremap <silent> <Leader>o :<C-u>NERDTreeToggle<CR>
let NERDTreeQuitOnOpen = 1  " Close the NERDTree after a file has been opened
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif " Close vim if the only window left open is NerdTree

" Configure CtrlP
let g:ctrlp_map = '<Leader>f'

" Configure Gundo
nnoremap <silent> <Leader>u :GundoToggle<CR>
vnoremap <silent> <Leader>u :<C-u>GundoToggle<CR>
let g:gundo_close_on_revert = 1 " Close the gundo windo after reverting

" Configure Fugitive
nnoremap <silent> <leader>gs :Gstatus<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
nnoremap <silent> <leader>gb :Gblame<CR>
nnoremap <silent> <leader>gw :Gwrite<CR>
nnoremap <silent> <leader>ga :Gwrite<CR>
nnoremap <silent> <leader>gc :Gcommit<CR>
nnoremap <silent> <leader>gp :Git push<CR>

" Configure Tabular
" TODO: Visual mode mappings (e.g. \t=)
" TODO: Operator-pending mode mappings (e.g. \t=5j)
"""" END PLUGIN CONFIGURATION """"

" Fix typos
abbreviate W w

" Save a read-only file that wasn't opened with sudo
cnoremap w!! w !sudo tee % >/dev/null

" Configure vim-slime
let g:slime_target = "tmux"
"let g:slime_python_ipython = 1

" ruby-vim
set nocompatible      " We're running Vim, not Vi!
syntax on             " Enable syntax highlighting
filetype on           " Enable filetype detection
filetype indent on    " Enable filetype-specific indenting
filetype plugin on    " Enable filetype-specific plugins
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
autocmd FileType ruby,eruby let g:rubycomplete_load_gemfile = 1
autocmd FileType ruby,eruby let ruby_space_errors = 1
autocmd FileType ruby,eruby let ruby_fold = 1
autocmd FileType ruby,eruby let ruby_spellcheck_strings = 1

" Autosave vim sessions
autocmd VimEnter * Obsession ~/.Session.vim

" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)
